version: '2'
services:

    gateway:
        build: 
            context: ./gateway
            dockerfile: Dockerfile
        container_name: gateway
        ports:
            - "8080:8080"
            - "8443:8443"
            - "9876:9876"
        volumes:
            - ./gateway/system.config.yml:/usr/src/app/config/system.config.yml
            - ./gateway/gateway.config.yml:/usr/src/app/config/gateway.config.yml
        depends_on:
            - notfound
            - auth
            - homepage
            - dashboard
            - user
        networks:
            - gateway

    redis:
        image: redis
        container_name: redis
        ports:
            - "6379:6379"
        networks:
            - gateway

    mongo:
        image: mongo:3
        container_name: mongo
        command: mongod --smallfiles --bind_ip_all
        volumes:
            - ./data:/data/db
        ports:
            - "27017:27017"
        networks:
            - gateway

    notfound:
        image: shipyardsuite/notfound:develop
        container_name: notfound
        expose:
            - "3003"
        environment:
            SERVICE_PORT: 3003
        networks: 
            - gateway

    homepage:
        image: shipyardsuite/homepage:develop
        container_name: homepage
        expose:
            - "3001"
        depends_on:
            - mongo 
        environment:
            SERVICE_PORT: 3001
            SERVICE_NAME: homepage
            DATABASE_URL: ${DATABASE_URL}
        networks: 
            - gateway

    auth:
        image: shipyardsuite/auth:develop
        container_name: auth
        expose:
            - "3002"
        environment:
            SERVICE_NAME: auth
            DATABASE_URL: ${DATABASE_URL}
            SERVICE_PORT: 3002
        depends_on: 
            - mongo
        networks: 
            - gateway

    dashboard:
        image: shipyardsuite/dashboard:develop
        container_name: dashboard
        expose:
            - "3002"
        environment:
            SERVICE_NAME: dashboard
            DATABASE_URL: ${DATABASE_URL}
            SERVICE_PORT: 3004
        networks: 
            - gateway

    user:
        build: ./
        container_name: ${SERVICE_NAME}
        expose:
            - "${SERVICE_PORT}"
        volumes:
            - ./:/usr/src/app
        working_dir: /usr/src/app
        command: sh -c 'npm install; npm run start:dev'
        depends_on:
            - mongo 
        networks:
            - gateway
        environment:
            SERVICE_NAME: ${SERVICE_NAME}
            DATABASE_URL: ${DATABASE_URL}
            SERVICE_PORT: ${SERVICE_PORT}

networks:
    gateway:
